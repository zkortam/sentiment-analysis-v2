
==> Audit <==
|---------|-------------------------------------------------------------|----------|---------|---------|---------------------|---------------------|
| Command |                            Args                             | Profile  |  User   | Version |     Start Time      |      End Time       |
|---------|-------------------------------------------------------------|----------|---------|---------|---------------------|---------------------|
| start   |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 16:45 PST | 22 Feb 25 16:46 PST |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 16:47 PST |                     |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 16:47 PST |                     |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 17:20 PST |                     |
| image   | load                                                        | minikube | zakaria | v1.35.0 | 22 Feb 25 17:21 PST | 22 Feb 25 17:22 PST |
|         | zkortam/sentiment-analysis:latest                           |          |         |         |                     |                     |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 17:44 PST | 22 Feb 25 17:44 PST |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 17:45 PST |                     |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 17:52 PST |                     |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 17:55 PST |                     |
| service | sentiment-service --url                                     | minikube | zakaria | v1.35.0 | 22 Feb 25 17:56 PST |                     |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 17:57 PST | 22 Feb 25 17:57 PST |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 17:57 PST |                     |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 17:59 PST |                     |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 17:59 PST | 22 Feb 25 17:59 PST |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:00 PST | 22 Feb 25 18:00 PST |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:00 PST |                     |
| tunnel  |                                                             | minikube | root    | v1.35.0 | 22 Feb 25 18:01 PST |                     |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:04 PST |                     |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:07 PST |                     |
| tunnel  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:08 PST |                     |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:11 PST | 22 Feb 25 18:11 PST |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:12 PST | 22 Feb 25 18:12 PST |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:17 PST | 22 Feb 25 18:17 PST |
| stop    |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:29 PST | 22 Feb 25 18:30 PST |
| delete  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:30 PST | 22 Feb 25 18:30 PST |
| start   | --extra-config=apiserver.service-node-port-range=3000-32767 | minikube | zakaria | v1.35.0 | 22 Feb 25 18:30 PST | 22 Feb 25 18:30 PST |
| ip      |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:32 PST | 22 Feb 25 18:32 PST |
| stop    |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:41 PST | 22 Feb 25 18:41 PST |
| delete  |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 18:41 PST | 22 Feb 25 18:41 PST |
| start   | --memory=4096 --cpus=2                                      | minikube | zakaria | v1.35.0 | 22 Feb 25 18:41 PST |                     |
| start   |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 20:32 PST |                     |
| start   |                                                             | minikube | zakaria | v1.35.0 | 22 Feb 25 20:38 PST |                     |
| start   |                                                             | minikube | zakaria | v1.35.0 | 23 Feb 25 14:15 PST |                     |
| delete  |                                                             | minikube | zakaria | v1.35.0 | 23 Feb 25 14:16 PST | 23 Feb 25 14:16 PST |
| start   | --driver=docker                                             | minikube | zakaria | v1.35.0 | 23 Feb 25 14:16 PST | 23 Feb 25 14:16 PST |
|---------|-------------------------------------------------------------|----------|---------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2025/02/23 14:16:11
Running on machine: Zakaria-Intern-Cairo
Binary: Built with gc go1.23.4 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0223 14:16:11.679705   15973 out.go:345] Setting OutFile to fd 1 ...
I0223 14:16:11.680079   15973 out.go:397] isatty.IsTerminal(1) = true
I0223 14:16:11.680082   15973 out.go:358] Setting ErrFile to fd 2...
I0223 14:16:11.680086   15973 out.go:397] isatty.IsTerminal(2) = true
I0223 14:16:11.680228   15973 root.go:338] Updating PATH: /Users/zakaria/.minikube/bin
I0223 14:16:11.681348   15973 out.go:352] Setting JSON to false
I0223 14:16:11.727009   15973 start.go:129] hostinfo: {"hostname":"Zakaria-Intern-Cairo.local","uptime":69920,"bootTime":1740279051,"procs":449,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"15.1.1","kernelVersion":"24.1.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"aa816b52-ec65-5933-ad89-c5146581e218"}
W0223 14:16:11.727129   15973 start.go:137] gopshost.Virtualization returned error: not implemented yet
I0223 14:16:11.734749   15973 out.go:177] 😄  minikube v1.35.0 on Darwin 15.1.1 (arm64)
I0223 14:16:11.748355   15973 notify.go:220] Checking for updates...
I0223 14:16:11.748868   15973 driver.go:394] Setting default libvirt URI to qemu:///system
I0223 14:16:11.820633   15973 docker.go:123] docker version: linux-27.5.1:Docker Desktop 4.38.0 (181591)
I0223 14:16:11.820968   15973 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0223 14:16:12.230978   15973 info.go:266] docker info: {ID:c22a0c29-cd1a-4801-85b6-a27b52f5aaed Containers:9 ContainersRunning:0 ContainersPaused:0 ContainersStopped:9 Images:11 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:52 OomKillDisable:false NGoroutines:82 SystemTime:2025-02-23 22:16:12.201916792 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:18 KernelVersion:6.12.5-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:4109344768 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///Users/zakaria/Library/Containers/com.docker.docker/Data/docker-cli.sock] ExperimentalBuild:false ServerVersion:27.5.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.1.12-0-g51d5e946 Expected:v1.1.12-0-g51d5e946} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:/Users/zakaria/.docker/cli-plugins/docker-ai SchemaVersion:0.1.0 ShortDescription:Ask Gordon - Docker Agent Vendor:Docker Inc. Version:v0.7.3] map[Name:buildx Path:/Users/zakaria/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.20.1-desktop.2] map[Name:compose Path:/Users/zakaria/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.4-desktop.1] map[Name:debug Path:/Users/zakaria/.docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:/Users/zakaria/.docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.4] map[Name:dev Path:/Users/zakaria/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/Users/zakaria/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:/Users/zakaria/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/Users/zakaria/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:/Users/zakaria/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/Users/zakaria/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.16.1]] Warnings:<nil>}}
I0223 14:16:12.235657   15973 out.go:177] ✨  Using the docker driver based on user configuration
I0223 14:16:12.241976   15973 start.go:297] selected driver: docker
I0223 14:16:12.242458   15973 start.go:901] validating driver "docker" against <nil>
I0223 14:16:12.242470   15973 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0223 14:16:12.242626   15973 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0223 14:16:12.356724   15973 info.go:266] docker info: {ID:c22a0c29-cd1a-4801-85b6-a27b52f5aaed Containers:9 ContainersRunning:0 ContainersPaused:0 ContainersStopped:9 Images:11 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:52 OomKillDisable:false NGoroutines:82 SystemTime:2025-02-23 22:16:12.345814875 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:18 KernelVersion:6.12.5-linuxkit OperatingSystem:Docker Desktop OSType:linux Architecture:aarch64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:4109344768 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=unix:///Users/zakaria/Library/Containers/com.docker.docker/Data/docker-cli.sock] ExperimentalBuild:false ServerVersion:27.5.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.1.12-0-g51d5e946 Expected:v1.1.12-0-g51d5e946} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:/Users/zakaria/.docker/cli-plugins/docker-ai SchemaVersion:0.1.0 ShortDescription:Ask Gordon - Docker Agent Vendor:Docker Inc. Version:v0.7.3] map[Name:buildx Path:/Users/zakaria/.docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.20.1-desktop.2] map[Name:compose Path:/Users/zakaria/.docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.4-desktop.1] map[Name:debug Path:/Users/zakaria/.docker/cli-plugins/docker-debug SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:/Users/zakaria/.docker/cli-plugins/docker-desktop SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.4] map[Name:dev Path:/Users/zakaria/.docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:/Users/zakaria/.docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:feedback Path:/Users/zakaria/.docker/cli-plugins/docker-feedback SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.5] map[Name:init Path:/Users/zakaria/.docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:/Users/zakaria/.docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:/Users/zakaria/.docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.16.1]] Warnings:<nil>}}
I0223 14:16:12.357314   15973 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0223 14:16:12.357601   15973 start_flags.go:393] Using suggested 2200MB memory alloc based on sys=8192MB, container=3918MB
I0223 14:16:12.358407   15973 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0223 14:16:12.362711   15973 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0223 14:16:12.366703   15973 cni.go:84] Creating CNI manager for ""
I0223 14:16:12.366991   15973 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0223 14:16:12.366997   15973 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0223 14:16:12.367242   15973 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0223 14:16:12.374678   15973 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0223 14:16:12.378658   15973 cache.go:121] Beginning downloading kic base image for docker with docker
I0223 14:16:12.381701   15973 out.go:177] 🚜  Pulling base image v0.0.46 ...
I0223 14:16:12.390401   15973 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0223 14:16:12.390402   15973 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon
I0223 14:16:12.390451   15973 preload.go:146] Found local preload: /Users/zakaria/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4
I0223 14:16:12.390457   15973 cache.go:56] Caching tarball of preloaded images
I0223 14:16:12.390641   15973 preload.go:172] Found /Users/zakaria/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0223 14:16:12.390663   15973 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0223 14:16:12.391497   15973 profile.go:143] Saving config to /Users/zakaria/.minikube/profiles/minikube/config.json ...
I0223 14:16:12.391550   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/config.json: {Name:mk23f4861aa44adaba9aeb12c0f0866ca4c525be Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:12.438156   15973 image.go:100] Found gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon, skipping pull
I0223 14:16:12.438331   15973 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 exists in daemon, skipping load
I0223 14:16:12.438345   15973 cache.go:227] Successfully downloaded all kic artifacts
I0223 14:16:12.438826   15973 start.go:360] acquireMachinesLock for minikube: {Name:mk83020912d7a51a5383801e42f3844ed75fe2f0 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0223 14:16:12.439311   15973 start.go:364] duration metric: took 474.541µs to acquireMachinesLock for "minikube"
I0223 14:16:12.439338   15973 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0223 14:16:12.439382   15973 start.go:125] createHost starting for "" (driver="docker")
I0223 14:16:12.446707   15973 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
I0223 14:16:12.447132   15973 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0223 14:16:12.447539   15973 client.go:168] LocalClient.Create starting
I0223 14:16:12.448434   15973 main.go:141] libmachine: Reading certificate data from /Users/zakaria/.minikube/certs/ca.pem
I0223 14:16:12.456324   15973 main.go:141] libmachine: Decoding PEM data...
I0223 14:16:12.456362   15973 main.go:141] libmachine: Parsing certificate...
I0223 14:16:12.456837   15973 main.go:141] libmachine: Reading certificate data from /Users/zakaria/.minikube/certs/cert.pem
I0223 14:16:12.463143   15973 main.go:141] libmachine: Decoding PEM data...
I0223 14:16:12.463150   15973 main.go:141] libmachine: Parsing certificate...
I0223 14:16:12.464674   15973 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0223 14:16:12.490335   15973 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0223 14:16:12.490465   15973 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0223 14:16:12.490490   15973 cli_runner.go:164] Run: docker network inspect minikube
W0223 14:16:12.514757   15973 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0223 14:16:12.514790   15973 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0223 14:16:12.514800   15973 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0223 14:16:12.514946   15973 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0223 14:16:12.540821   15973 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0x140016be9d0}
I0223 14:16:12.540879   15973 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 65535 ...
I0223 14:16:12.540964   15973 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=65535 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0223 14:16:12.680211   15973 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0223 14:16:12.680266   15973 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0223 14:16:12.680442   15973 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0223 14:16:12.708720   15973 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0223 14:16:12.737009   15973 oci.go:103] Successfully created a docker volume minikube
I0223 14:16:12.737133   15973 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib
I0223 14:16:13.479266   15973 oci.go:107] Successfully prepared a docker volume minikube
I0223 14:16:13.479355   15973 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0223 14:16:13.479394   15973 kic.go:194] Starting extracting preloaded images to volume ...
I0223 14:16:13.479595   15973 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /Users/zakaria/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir
I0223 14:16:16.742754   15973 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /Users/zakaria/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-arm64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir: (3.262932084s)
I0223 14:16:16.744911   15973 kic.go:203] duration metric: took 3.265125708s to extract preloaded images to volume ...
I0223 14:16:16.747330   15973 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0223 14:16:17.179954   15973 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb --memory-swap=2200mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279
I0223 14:16:17.485525   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0223 14:16:17.516552   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:17.555621   15973 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0223 14:16:17.633355   15973 oci.go:144] the created container "minikube" has a running status.
I0223 14:16:17.634141   15973 kic.go:225] Creating ssh key for kic: /Users/zakaria/.minikube/machines/minikube/id_rsa...
I0223 14:16:18.140973   15973 kic_runner.go:191] docker (temp): /Users/zakaria/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0223 14:16:18.196484   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:18.223866   15973 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0223 14:16:18.223889   15973 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0223 14:16:18.303177   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:18.328483   15973 machine.go:93] provisionDockerMachine start ...
I0223 14:16:18.330302   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:18.357251   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:18.364618   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:18.364627   15973 main.go:141] libmachine: About to run SSH command:
hostname
I0223 14:16:18.488158   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0223 14:16:18.488736   15973 ubuntu.go:169] provisioning hostname "minikube"
I0223 14:16:18.489739   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:18.515260   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:18.515474   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:18.515480   15973 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0223 14:16:18.656149   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0223 14:16:18.656556   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:18.682783   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:18.683000   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:18.683015   15973 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0223 14:16:18.796318   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0223 14:16:18.796337   15973 ubuntu.go:175] set auth options {CertDir:/Users/zakaria/.minikube CaCertPath:/Users/zakaria/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/zakaria/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/zakaria/.minikube/machines/server.pem ServerKeyPath:/Users/zakaria/.minikube/machines/server-key.pem ClientKeyPath:/Users/zakaria/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/zakaria/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/zakaria/.minikube}
I0223 14:16:18.797166   15973 ubuntu.go:177] setting up certificates
I0223 14:16:18.798742   15973 provision.go:84] configureAuth start
I0223 14:16:18.799390   15973 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0223 14:16:18.827079   15973 provision.go:143] copyHostCerts
I0223 14:16:18.837032   15973 exec_runner.go:144] found /Users/zakaria/.minikube/key.pem, removing ...
I0223 14:16:18.837211   15973 exec_runner.go:203] rm: /Users/zakaria/.minikube/key.pem
I0223 14:16:18.838192   15973 exec_runner.go:151] cp: /Users/zakaria/.minikube/certs/key.pem --> /Users/zakaria/.minikube/key.pem (1675 bytes)
I0223 14:16:18.838735   15973 exec_runner.go:144] found /Users/zakaria/.minikube/ca.pem, removing ...
I0223 14:16:18.838738   15973 exec_runner.go:203] rm: /Users/zakaria/.minikube/ca.pem
I0223 14:16:18.839085   15973 exec_runner.go:151] cp: /Users/zakaria/.minikube/certs/ca.pem --> /Users/zakaria/.minikube/ca.pem (1078 bytes)
I0223 14:16:18.839770   15973 exec_runner.go:144] found /Users/zakaria/.minikube/cert.pem, removing ...
I0223 14:16:18.839773   15973 exec_runner.go:203] rm: /Users/zakaria/.minikube/cert.pem
I0223 14:16:18.840087   15973 exec_runner.go:151] cp: /Users/zakaria/.minikube/certs/cert.pem --> /Users/zakaria/.minikube/cert.pem (1123 bytes)
I0223 14:16:18.840932   15973 provision.go:117] generating server cert: /Users/zakaria/.minikube/machines/server.pem ca-key=/Users/zakaria/.minikube/certs/ca.pem private-key=/Users/zakaria/.minikube/certs/ca-key.pem org=zakaria.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0223 14:16:18.955941   15973 provision.go:177] copyRemoteCerts
I0223 14:16:18.956603   15973 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0223 14:16:18.956669   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:18.984779   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:19.074931   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/machines/server.pem --> /etc/docker/server.pem (1180 bytes)
I0223 14:16:19.098897   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0223 14:16:19.116768   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0223 14:16:19.132051   15973 provision.go:87] duration metric: took 332.8455ms to configureAuth
I0223 14:16:19.132236   15973 ubuntu.go:193] setting minikube options for container-runtime
I0223 14:16:19.137428   15973 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0223 14:16:19.137560   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:19.163791   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:19.164039   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:19.164044   15973 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0223 14:16:19.282416   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0223 14:16:19.282447   15973 ubuntu.go:71] root file system type: overlay
I0223 14:16:19.284427   15973 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0223 14:16:19.286034   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:19.313383   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:19.313606   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:19.313662   15973 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0223 14:16:19.441592   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0223 14:16:19.442071   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:19.472811   15973 main.go:141] libmachine: Using SSH client type: native
I0223 14:16:19.473065   15973 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x105328790] 0x10532afd0 <nil>  [] 0s} 127.0.0.1 52969 <nil> <nil>}
I0223 14:16:19.473077   15973 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0223 14:16:20.744481   15973 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-12-17 15:44:16.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-02-23 22:16:19.439128004 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0223 14:16:20.744534   15973 machine.go:96] duration metric: took 2.416104292s to provisionDockerMachine
I0223 14:16:20.744549   15973 client.go:171] duration metric: took 8.2973425s to LocalClient.Create
I0223 14:16:20.744875   15973 start.go:167] duration metric: took 8.298074541s to libmachine.API.Create "minikube"
I0223 14:16:20.744882   15973 start.go:293] postStartSetup for "minikube" (driver="docker")
I0223 14:16:20.744898   15973 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0223 14:16:20.745120   15973 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0223 14:16:20.745196   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:20.775591   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:20.864480   15973 ssh_runner.go:195] Run: cat /etc/os-release
I0223 14:16:20.871101   15973 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0223 14:16:20.871136   15973 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0223 14:16:20.871150   15973 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0223 14:16:20.871158   15973 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0223 14:16:20.872210   15973 filesync.go:126] Scanning /Users/zakaria/.minikube/addons for local assets ...
I0223 14:16:20.872945   15973 filesync.go:126] Scanning /Users/zakaria/.minikube/files for local assets ...
I0223 14:16:20.873274   15973 start.go:296] duration metric: took 128.390083ms for postStartSetup
I0223 14:16:20.879222   15973 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0223 14:16:20.909258   15973 profile.go:143] Saving config to /Users/zakaria/.minikube/profiles/minikube/config.json ...
I0223 14:16:20.911016   15973 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0223 14:16:20.911097   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:20.939285   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:21.026443   15973 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0223 14:16:21.030669   15973 start.go:128] duration metric: took 8.59162625s to createHost
I0223 14:16:21.030990   15973 start.go:83] releasing machines lock for "minikube", held for 8.592020125s
I0223 14:16:21.031674   15973 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0223 14:16:21.063879   15973 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0223 14:16:21.063879   15973 ssh_runner.go:195] Run: cat /version.json
I0223 14:16:21.063989   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:21.065193   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:21.091757   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:21.092091   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:21.404294   15973 ssh_runner.go:195] Run: systemctl --version
I0223 14:16:21.409699   15973 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0223 14:16:21.414150   15973 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0223 14:16:21.437233   15973 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0223 14:16:21.437758   15973 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0223 14:16:21.455273   15973 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0223 14:16:21.455808   15973 start.go:495] detecting cgroup driver to use...
I0223 14:16:21.455830   15973 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0223 14:16:21.457010   15973 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0223 14:16:21.468163   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0223 14:16:21.475563   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0223 14:16:21.483449   15973 containerd.go:146] configuring containerd to use "cgroupfs" as cgroup driver...
I0223 14:16:21.483673   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0223 14:16:21.490230   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0223 14:16:21.497134   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0223 14:16:21.503376   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0223 14:16:21.509977   15973 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0223 14:16:21.516562   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0223 14:16:21.522820   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0223 14:16:21.529401   15973 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0223 14:16:21.535988   15973 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0223 14:16:21.541700   15973 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0223 14:16:21.547182   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:21.599437   15973 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0223 14:16:21.675071   15973 start.go:495] detecting cgroup driver to use...
I0223 14:16:21.675096   15973 detect.go:187] detected "cgroupfs" cgroup driver on host os
I0223 14:16:21.675335   15973 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0223 14:16:21.684856   15973 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0223 14:16:21.686884   15973 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0223 14:16:21.695705   15973 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0223 14:16:21.706907   15973 ssh_runner.go:195] Run: which cri-dockerd
I0223 14:16:21.709936   15973 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0223 14:16:21.717533   15973 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0223 14:16:21.731172   15973 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0223 14:16:21.838557   15973 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0223 14:16:21.926372   15973 docker.go:574] configuring docker to use "cgroupfs" as cgroup driver...
I0223 14:16:21.929956   15973 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0223 14:16:21.945300   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:22.018939   15973 ssh_runner.go:195] Run: sudo systemctl restart docker
I0223 14:16:23.692435   15973 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.673537375s)
I0223 14:16:23.692654   15973 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0223 14:16:23.701749   15973 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0223 14:16:23.709624   15973 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0223 14:16:23.761198   15973 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0223 14:16:23.809755   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:23.867132   15973 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0223 14:16:23.891756   15973 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0223 14:16:23.899876   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:23.949403   15973 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0223 14:16:24.148892   15973 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0223 14:16:24.149468   15973 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0223 14:16:24.152640   15973 start.go:563] Will wait 60s for crictl version
I0223 14:16:24.152774   15973 ssh_runner.go:195] Run: which crictl
I0223 14:16:24.155280   15973 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0223 14:16:24.267073   15973 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.4.1
RuntimeApiVersion:  v1
I0223 14:16:24.267202   15973 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0223 14:16:24.363544   15973 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0223 14:16:24.395308   15973 out.go:235] 🐳  Preparing Kubernetes v1.32.0 on Docker 27.4.1 ...
I0223 14:16:24.397222   15973 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0223 14:16:24.570096   15973 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0223 14:16:24.570610   15973 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0223 14:16:24.574718   15973 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0223 14:16:24.587736   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0223 14:16:24.616214   15973 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0223 14:16:24.616871   15973 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0223 14:16:24.616969   15973 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0223 14:16:24.633778   15973 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0223 14:16:24.633797   15973 docker.go:619] Images already preloaded, skipping extraction
I0223 14:16:24.634289   15973 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0223 14:16:24.651654   15973 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0223 14:16:24.651688   15973 cache_images.go:84] Images are preloaded, skipping loading
I0223 14:16:24.651709   15973 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.32.0 docker true true} ...
I0223 14:16:24.653102   15973 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.32.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0223 14:16:24.653182   15973 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0223 14:16:24.836486   15973 cni.go:84] Creating CNI manager for ""
I0223 14:16:24.836506   15973 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0223 14:16:24.836558   15973 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0223 14:16:24.837199   15973 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.32.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0223 14:16:24.838085   15973 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.32.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0223 14:16:24.838315   15973 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.32.0
I0223 14:16:24.847156   15973 binaries.go:44] Found k8s binaries, skipping transfer
I0223 14:16:24.847324   15973 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0223 14:16:24.853542   15973 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0223 14:16:24.865941   15973 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0223 14:16:24.877891   15973 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2286 bytes)
I0223 14:16:24.890116   15973 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0223 14:16:24.893081   15973 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0223 14:16:24.900577   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:24.953406   15973 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0223 14:16:24.983509   15973 certs.go:68] Setting up /Users/zakaria/.minikube/profiles/minikube for IP: 192.168.49.2
I0223 14:16:24.983525   15973 certs.go:194] generating shared ca certs ...
I0223 14:16:24.983561   15973 certs.go:226] acquiring lock for ca certs: {Name:mkb675e46726814601bf5da92081c552f11360f6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.012253   15973 certs.go:235] skipping valid "minikubeCA" ca cert: /Users/zakaria/.minikube/ca.key
I0223 14:16:25.022450   15973 certs.go:235] skipping valid "proxyClientCA" ca cert: /Users/zakaria/.minikube/proxy-client-ca.key
I0223 14:16:25.022738   15973 certs.go:256] generating profile certs ...
I0223 14:16:25.022850   15973 certs.go:363] generating signed profile cert for "minikube-user": /Users/zakaria/.minikube/profiles/minikube/client.key
I0223 14:16:25.023578   15973 crypto.go:68] Generating cert /Users/zakaria/.minikube/profiles/minikube/client.crt with IP's: []
I0223 14:16:25.142851   15973 crypto.go:156] Writing cert to /Users/zakaria/.minikube/profiles/minikube/client.crt ...
I0223 14:16:25.147277   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/client.crt: {Name:mk8adfc79189f54acc4028c3190863bf9982acef Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.148412   15973 crypto.go:164] Writing key to /Users/zakaria/.minikube/profiles/minikube/client.key ...
I0223 14:16:25.148417   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/client.key: {Name:mk96da2b36d72d967a2695a2150a6e2dd289ca61 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.148999   15973 certs.go:363] generating signed profile cert for "minikube": /Users/zakaria/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0223 14:16:25.149010   15973 crypto.go:68] Generating cert /Users/zakaria/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0223 14:16:25.428408   15973 crypto.go:156] Writing cert to /Users/zakaria/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0223 14:16:25.428420   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk1380b327697ea76efa569a30c6dac68503183f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.429654   15973 crypto.go:164] Writing key to /Users/zakaria/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0223 14:16:25.429664   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mk160e1ec774a1d00570cf1add82abaffcc6d3f2 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.431067   15973 certs.go:381] copying /Users/zakaria/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /Users/zakaria/.minikube/profiles/minikube/apiserver.crt
I0223 14:16:25.438923   15973 certs.go:385] copying /Users/zakaria/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /Users/zakaria/.minikube/profiles/minikube/apiserver.key
I0223 14:16:25.446641   15973 certs.go:363] generating signed profile cert for "aggregator": /Users/zakaria/.minikube/profiles/minikube/proxy-client.key
I0223 14:16:25.446651   15973 crypto.go:68] Generating cert /Users/zakaria/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0223 14:16:25.549978   15973 crypto.go:156] Writing cert to /Users/zakaria/.minikube/profiles/minikube/proxy-client.crt ...
I0223 14:16:25.549985   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/proxy-client.crt: {Name:mk25ac65edac1e9da29f5bc29fb9a01f944cd56a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.551099   15973 crypto.go:164] Writing key to /Users/zakaria/.minikube/profiles/minikube/proxy-client.key ...
I0223 14:16:25.551103   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.minikube/profiles/minikube/proxy-client.key: {Name:mk4dbc89dfad1f364a293aab48bb1330de8f0c8c Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:25.574304   15973 certs.go:484] found cert: /Users/zakaria/.minikube/certs/ca-key.pem (1679 bytes)
I0223 14:16:25.574351   15973 certs.go:484] found cert: /Users/zakaria/.minikube/certs/ca.pem (1078 bytes)
I0223 14:16:25.574393   15973 certs.go:484] found cert: /Users/zakaria/.minikube/certs/cert.pem (1123 bytes)
I0223 14:16:25.574597   15973 certs.go:484] found cert: /Users/zakaria/.minikube/certs/key.pem (1675 bytes)
I0223 14:16:25.588416   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0223 14:16:25.611068   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0223 14:16:25.627220   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0223 14:16:25.643658   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0223 14:16:25.658634   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0223 14:16:25.673615   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0223 14:16:25.688307   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0223 14:16:25.703097   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0223 14:16:25.717588   15973 ssh_runner.go:362] scp /Users/zakaria/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0223 14:16:25.735360   15973 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0223 14:16:25.747964   15973 ssh_runner.go:195] Run: openssl version
I0223 14:16:25.755017   15973 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0223 14:16:25.764006   15973 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0223 14:16:25.766383   15973 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Feb 23 00:46 /usr/share/ca-certificates/minikubeCA.pem
I0223 14:16:25.766447   15973 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0223 14:16:25.771490   15973 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0223 14:16:25.777539   15973 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0223 14:16:25.780006   15973 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0223 14:16:25.780468   15973 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0223 14:16:25.780619   15973 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0223 14:16:25.793177   15973 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0223 14:16:25.799213   15973 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0223 14:16:25.804905   15973 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0223 14:16:25.805521   15973 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0223 14:16:25.811902   15973 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0223 14:16:25.812211   15973 kubeadm.go:157] found existing configuration files:

I0223 14:16:25.812489   15973 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0223 14:16:25.818264   15973 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0223 14:16:25.818354   15973 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0223 14:16:25.823696   15973 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0223 14:16:25.829332   15973 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0223 14:16:25.829488   15973 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0223 14:16:25.834851   15973 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0223 14:16:25.840425   15973 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0223 14:16:25.840521   15973 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0223 14:16:25.846392   15973 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0223 14:16:25.852653   15973 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0223 14:16:25.852764   15973 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0223 14:16:25.858738   15973 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0223 14:16:25.920021   15973 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0223 14:16:25.963680   15973 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0223 14:16:34.561589   15973 kubeadm.go:310] [init] Using Kubernetes version: v1.32.0
I0223 14:16:34.561750   15973 kubeadm.go:310] [preflight] Running pre-flight checks
I0223 14:16:34.561861   15973 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0223 14:16:34.561998   15973 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0223 14:16:34.562127   15973 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0223 14:16:34.562209   15973 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0223 14:16:34.571728   15973 out.go:235]     ▪ Generating certificates and keys ...
I0223 14:16:34.571879   15973 kubeadm.go:310] [certs] Using existing ca certificate authority
I0223 14:16:34.571968   15973 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0223 14:16:34.572083   15973 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0223 14:16:34.572153   15973 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0223 14:16:34.572240   15973 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0223 14:16:34.572309   15973 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0223 14:16:34.572388   15973 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0223 14:16:34.572574   15973 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0223 14:16:34.572647   15973 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0223 14:16:34.572849   15973 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0223 14:16:34.572953   15973 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0223 14:16:34.573043   15973 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0223 14:16:34.573105   15973 kubeadm.go:310] [certs] Generating "sa" key and public key
I0223 14:16:34.573180   15973 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0223 14:16:34.573260   15973 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0223 14:16:34.573344   15973 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0223 14:16:34.573415   15973 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0223 14:16:34.573529   15973 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0223 14:16:34.573615   15973 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0223 14:16:34.573721   15973 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0223 14:16:34.573820   15973 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0223 14:16:34.581663   15973 out.go:235]     ▪ Booting up control plane ...
I0223 14:16:34.581846   15973 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0223 14:16:34.582022   15973 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0223 14:16:34.582160   15973 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0223 14:16:34.582292   15973 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0223 14:16:34.582427   15973 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0223 14:16:34.582517   15973 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0223 14:16:34.582725   15973 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0223 14:16:34.582869   15973 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0223 14:16:34.582954   15973 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 505.994792ms
I0223 14:16:34.583047   15973 kubeadm.go:310] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I0223 14:16:34.583133   15973 kubeadm.go:310] [api-check] The API server is healthy after 4.002035836s
I0223 14:16:34.583280   15973 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0223 14:16:34.583440   15973 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0223 14:16:34.583511   15973 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0223 14:16:34.583774   15973 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0223 14:16:34.583852   15973 kubeadm.go:310] [bootstrap-token] Using token: m0z157.kqgxuidk8ulfvjaa
I0223 14:16:34.591108   15973 out.go:235]     ▪ Configuring RBAC rules ...
I0223 14:16:34.591409   15973 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0223 14:16:34.591571   15973 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0223 14:16:34.591788   15973 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0223 14:16:34.592038   15973 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0223 14:16:34.592218   15973 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0223 14:16:34.592365   15973 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0223 14:16:34.592547   15973 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0223 14:16:34.592632   15973 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0223 14:16:34.592706   15973 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0223 14:16:34.592713   15973 kubeadm.go:310] 
I0223 14:16:34.592789   15973 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0223 14:16:34.592793   15973 kubeadm.go:310] 
I0223 14:16:34.592917   15973 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0223 14:16:34.592921   15973 kubeadm.go:310] 
I0223 14:16:34.592980   15973 kubeadm.go:310]   mkdir -p $HOME/.kube
I0223 14:16:34.593080   15973 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0223 14:16:34.593160   15973 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0223 14:16:34.593167   15973 kubeadm.go:310] 
I0223 14:16:34.593264   15973 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0223 14:16:34.593276   15973 kubeadm.go:310] 
I0223 14:16:34.593351   15973 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0223 14:16:34.593355   15973 kubeadm.go:310] 
I0223 14:16:34.593444   15973 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0223 14:16:34.593578   15973 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0223 14:16:34.593673   15973 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0223 14:16:34.593677   15973 kubeadm.go:310] 
I0223 14:16:34.593946   15973 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0223 14:16:34.594116   15973 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0223 14:16:34.594120   15973 kubeadm.go:310] 
I0223 14:16:34.594254   15973 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token m0z157.kqgxuidk8ulfvjaa \
I0223 14:16:34.594433   15973 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:824c599d77af13b6965429399618a851a507448a289f7179f73f2d0289705d06 \
I0223 14:16:34.594470   15973 kubeadm.go:310] 	--control-plane 
I0223 14:16:34.594478   15973 kubeadm.go:310] 
I0223 14:16:34.594639   15973 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0223 14:16:34.594648   15973 kubeadm.go:310] 
I0223 14:16:34.594800   15973 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token m0z157.kqgxuidk8ulfvjaa \
I0223 14:16:34.594981   15973 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:824c599d77af13b6965429399618a851a507448a289f7179f73f2d0289705d06 
I0223 14:16:34.595040   15973 cni.go:84] Creating CNI manager for ""
I0223 14:16:34.595072   15973 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0223 14:16:34.600205   15973 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0223 14:16:34.609988   15973 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0223 14:16:34.625864   15973 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0223 14:16:34.645153   15973 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0223 14:16:34.645408   15973 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0223 14:16:34.646123   15973 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_02_23T14_16_34_0700 minikube.k8s.io/version=v1.35.0 minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0223 14:16:34.731286   15973 ops.go:34] apiserver oom_adj: -16
I0223 14:16:34.731317   15973 kubeadm.go:1113] duration metric: took 86.162ms to wait for elevateKubeSystemPrivileges
I0223 14:16:34.740788   15973 kubeadm.go:394] duration metric: took 8.960683167s to StartCluster
I0223 14:16:34.740831   15973 settings.go:142] acquiring lock: {Name:mkead3fbb0e41965e05a2cf3652ae930d2117a08 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:34.741732   15973 settings.go:150] Updating kubeconfig:  /Users/zakaria/.kube/config
I0223 14:16:34.745393   15973 lock.go:35] WriteFile acquiring /Users/zakaria/.kube/config: {Name:mke777469a046b83ac8c871cdc3b3caac7314c63 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0223 14:16:34.747308   15973 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0223 14:16:34.747708   15973 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0223 14:16:34.747559   15973 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0223 14:16:34.749478   15973 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0223 14:16:34.749498   15973 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0223 14:16:34.749661   15973 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0223 14:16:34.750018   15973 host.go:66] Checking if "minikube" exists ...
I0223 14:16:34.750124   15973 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0223 14:16:34.751811   15973 out.go:177] 🔎  Verifying Kubernetes components...
I0223 14:16:34.758110   15973 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0223 14:16:34.759200   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:34.759432   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:34.760785   15973 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0223 14:16:34.836097   15973 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0223 14:16:34.839191   15973 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0223 14:16:34.839197   15973 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0223 14:16:34.839277   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:34.850893   15973 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0223 14:16:34.850948   15973 host.go:66] Checking if "minikube" exists ...
I0223 14:16:34.851351   15973 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0223 14:16:34.864528   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:34.887894   15973 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0223 14:16:34.887904   15973 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0223 14:16:34.888025   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0223 14:16:34.903940   15973 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0223 14:16:34.911846   15973 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0223 14:16:34.918090   15973 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:52969 SSHKeyPath:/Users/zakaria/.minikube/machines/minikube/id_rsa Username:docker}
I0223 14:16:35.090757   15973 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0223 14:16:35.092563   15973 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0223 14:16:35.288320   15973 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0223 14:16:35.288421   15973 start.go:971] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0223 14:16:35.325867   15973 api_server.go:52] waiting for apiserver process to appear ...
I0223 14:16:35.325981   15973 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0223 14:16:35.490161   15973 api_server.go:72] duration metric: took 742.452ms to wait for apiserver process to appear ...
I0223 14:16:35.490181   15973 api_server.go:88] waiting for apiserver healthz status ...
I0223 14:16:35.490205   15973 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:52968/healthz ...
I0223 14:16:35.503122   15973 out.go:177] 🌟  Enabled addons: default-storageclass, storage-provisioner
I0223 14:16:35.510007   15973 addons.go:514] duration metric: took 762.833917ms for enable addons: enabled=[default-storageclass storage-provisioner]
I0223 14:16:35.511565   15973 api_server.go:279] https://127.0.0.1:52968/healthz returned 200:
ok
I0223 14:16:35.512720   15973 api_server.go:141] control plane version: v1.32.0
I0223 14:16:35.512733   15973 api_server.go:131] duration metric: took 22.548458ms to wait for apiserver health ...
I0223 14:16:35.512949   15973 system_pods.go:43] waiting for kube-system pods to appear ...
I0223 14:16:35.523693   15973 system_pods.go:59] 5 kube-system pods found
I0223 14:16:35.523710   15973 system_pods.go:61] "etcd-minikube" [014bdd53-e780-4393-8340-1c29134e5f58] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0223 14:16:35.523718   15973 system_pods.go:61] "kube-apiserver-minikube" [3921f068-9e52-4b06-8efb-bf8db965c923] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0223 14:16:35.523724   15973 system_pods.go:61] "kube-controller-manager-minikube" [3a16bff3-62be-4829-a9d7-2fe64ccb5cf6] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0223 14:16:35.523727   15973 system_pods.go:61] "kube-scheduler-minikube" [d7a70bfa-4d39-4228-b6d3-76e2c37dcff3] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0223 14:16:35.523730   15973 system_pods.go:61] "storage-provisioner" [990841dc-e68a-485d-9d02-b8b1d41656cb] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.)
I0223 14:16:35.523733   15973 system_pods.go:74] duration metric: took 10.780959ms to wait for pod list to return data ...
I0223 14:16:35.523739   15973 kubeadm.go:582] duration metric: took 776.040917ms to wait for: map[apiserver:true system_pods:true]
I0223 14:16:35.523745   15973 node_conditions.go:102] verifying NodePressure condition ...
I0223 14:16:35.526729   15973 node_conditions.go:122] node storage ephemeral capacity is 61202244Ki
I0223 14:16:35.526896   15973 node_conditions.go:123] node cpu capacity is 8
I0223 14:16:35.526903   15973 node_conditions.go:105] duration metric: took 3.155ms to run NodePressure ...
I0223 14:16:35.526910   15973 start.go:241] waiting for startup goroutines ...
I0223 14:16:35.795520   15973 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0223 14:16:35.795548   15973 start.go:246] waiting for cluster config update ...
I0223 14:16:35.795560   15973 start.go:255] writing updated cluster config ...
I0223 14:16:35.797990   15973 ssh_runner.go:195] Run: rm -f paused
I0223 14:16:35.864159   15973 start.go:600] kubectl: 1.31.4, cluster: 1.32.0 (minor skew: 1)
I0223 14:16:35.867635   15973 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.555332754Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.704929171Z" level=info msg="Loading containers: done."
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.715263338Z" level=info msg="Docker daemon" commit=c710b88 containerd-snapshotter=false storage-driver=overlay2 version=27.4.1
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.715341088Z" level=info msg="Daemon has completed initialization"
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.741829296Z" level=info msg="API listen on /var/run/docker.sock"
Feb 23 22:16:20 minikube dockerd[662]: time="2025-02-23T22:16:20.741887504Z" level=info msg="API listen on [::]:2376"
Feb 23 22:16:20 minikube systemd[1]: Started Docker Application Container Engine.
Feb 23 22:16:21 minikube systemd[1]: Stopping Docker Application Container Engine...
Feb 23 22:16:21 minikube dockerd[662]: time="2025-02-23T22:16:21.606039838Z" level=info msg="Processing signal 'terminated'"
Feb 23 22:16:21 minikube dockerd[662]: time="2025-02-23T22:16:21.607204755Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Feb 23 22:16:21 minikube dockerd[662]: time="2025-02-23T22:16:21.607502671Z" level=info msg="Daemon shutdown complete"
Feb 23 22:16:21 minikube systemd[1]: docker.service: Deactivated successfully.
Feb 23 22:16:21 minikube systemd[1]: Stopped Docker Application Container Engine.
Feb 23 22:16:21 minikube systemd[1]: Starting Docker Application Container Engine...
Feb 23 22:16:21 minikube dockerd[983]: time="2025-02-23T22:16:21.698053630Z" level=info msg="Starting up"
Feb 23 22:16:21 minikube dockerd[983]: time="2025-02-23T22:16:21.701661963Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Feb 23 22:16:21 minikube dockerd[983]: time="2025-02-23T22:16:21.724668588Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Feb 23 22:16:21 minikube dockerd[983]: time="2025-02-23T22:16:21.728519713Z" level=info msg="Loading containers: start."
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.026859213Z" level=info msg="Processing signal 'terminated'"
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.467950380Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.625899088Z" level=info msg="Loading containers: done."
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.650179005Z" level=info msg="Docker daemon" commit=c710b88 containerd-snapshotter=false storage-driver=overlay2 version=27.4.1
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.650302839Z" level=info msg="Daemon has completed initialization"
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.687291297Z" level=info msg="API listen on /var/run/docker.sock"
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.687369255Z" level=info msg="API listen on [::]:2376"
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.688397214Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Feb 23 22:16:22 minikube dockerd[983]: time="2025-02-23T22:16:22.688654297Z" level=info msg="Daemon shutdown complete"
Feb 23 22:16:22 minikube systemd[1]: docker.service: Deactivated successfully.
Feb 23 22:16:22 minikube systemd[1]: Stopped Docker Application Container Engine.
Feb 23 22:16:22 minikube systemd[1]: Starting Docker Application Container Engine...
Feb 23 22:16:22 minikube dockerd[1256]: time="2025-02-23T22:16:22.741947172Z" level=info msg="Starting up"
Feb 23 22:16:22 minikube dockerd[1256]: time="2025-02-23T22:16:22.742745964Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Feb 23 22:16:22 minikube dockerd[1256]: time="2025-02-23T22:16:22.755549047Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Feb 23 22:16:22 minikube dockerd[1256]: time="2025-02-23T22:16:22.763621297Z" level=info msg="Loading containers: start."
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.496345547Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.655801547Z" level=info msg="Loading containers: done."
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.663758006Z" level=info msg="Docker daemon" commit=c710b88 containerd-snapshotter=false storage-driver=overlay2 version=27.4.1
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.663799506Z" level=info msg="Daemon has completed initialization"
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.689966047Z" level=info msg="API listen on /var/run/docker.sock"
Feb 23 22:16:23 minikube dockerd[1256]: time="2025-02-23T22:16:23.689976756Z" level=info msg="API listen on [::]:2376"
Feb 23 22:16:23 minikube systemd[1]: Started Docker Application Container Engine.
Feb 23 22:16:23 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Start docker client with request timeout 0s"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Hairpin mode is set to hairpin-veth"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Loaded network plugin cni"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Docker cri networking managed by network plugin cni"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Setting cgroupDriver cgroupfs"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Feb 23 22:16:24 minikube cri-dockerd[1537]: time="2025-02-23T22:16:24Z" level=info msg="Start cri-dockerd grpc backend"
Feb 23 22:16:24 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Feb 23 22:16:29 minikube cri-dockerd[1537]: time="2025-02-23T22:16:29Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/22c2f3ce7495e333b4f4d030c312cd08c76fb13d738d0dad34a702ef6279a9d1/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:29 minikube cri-dockerd[1537]: time="2025-02-23T22:16:29Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/13360f9c23af0f1ad18fddb6305bfd74e6fd4275d72db2c4ba678e45debaea23/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:29 minikube cri-dockerd[1537]: time="2025-02-23T22:16:29Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/6738075e7a4ec6288e25545de5317c20dc14fe56fc485569af95e7af4b08d617/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:29 minikube cri-dockerd[1537]: time="2025-02-23T22:16:29Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/3dab74afa4c6715b788e4aeea0dfe7319c2886484daf805edf9be1c9810ee1c4/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:39 minikube cri-dockerd[1537]: time="2025-02-23T22:16:39Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ea4aceda000de1a0e6d937e30a3d85d79f3a79c501508be2b2326927043be8fa/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:39 minikube cri-dockerd[1537]: time="2025-02-23T22:16:39Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/c7a67eb105a265f0a5219fdad8eedee3f0d6268138db33016b88b3280c3793a8/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 23 22:16:39 minikube cri-dockerd[1537]: time="2025-02-23T22:16:39Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/0f6586b5c186c6876444812c8e259aff32f1574aeb46148d73aa4b3bbf3f53ee/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"


==> container status <==
CONTAINER           IMAGE               CREATED                  STATE               NAME                      ATTEMPT             POD ID              POD
0e995176ea67a       2f6c962e7b831       Less than a second ago   Running             coredns                   0                   0f6586b5c186c       coredns-668d6bf9bc-fxlmp
548840a2ad68a       2f50386e20bfd       1 second ago             Running             kube-proxy                0                   c7a67eb105a26       kube-proxy-nmk6l
bcf0f809c1831       ba04bb24b9575       1 second ago             Running             storage-provisioner       0                   ea4aceda000de       storage-provisioner
cf4e7202ce1c7       7fc9d4aa817aa       11 seconds ago           Running             etcd                      0                   3dab74afa4c67       etcd-minikube
556d0e765c54b       c3ff26fb59f37       11 seconds ago           Running             kube-scheduler            0                   6738075e7a4ec       kube-scheduler-minikube
e52751374320f       2b5bd0f16085a       11 seconds ago           Running             kube-apiserver            0                   13360f9c23af0       kube-apiserver-minikube
fa756b1604e5f       a8d049396f6b8       11 seconds ago           Running             kube-controller-manager   0                   22c2f3ce7495e       kube-controller-manager-minikube


==> coredns [0e995176ea67] <==
.:53
[INFO] plugin/reload: Running configuration SHA512 = e7e8a6c4578bf29b9f453cb54ade3fb14671793481527b7435e35119b25e84eb3a79242b1f470199f8605ace441674db8f1b6715b77448c20dde63e2dc5d2169
CoreDNS-1.11.3
linux/arm64, go1.21.11, a6338e9


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_02_23T14_16_34_0700
                    minikube.k8s.io/version=v1.35.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sun, 23 Feb 2025 22:16:31 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sun, 23 Feb 2025 22:16:33 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sun, 23 Feb 2025 22:16:31 +0000   Sun, 23 Feb 2025 22:16:30 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sun, 23 Feb 2025 22:16:31 +0000   Sun, 23 Feb 2025 22:16:30 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sun, 23 Feb 2025 22:16:31 +0000   Sun, 23 Feb 2025 22:16:30 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sun, 23 Feb 2025 22:16:31 +0000   Sun, 23 Feb 2025 22:16:31 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             4013032Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  61202244Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             4013032Ki
  pods:               110
System Info:
  Machine ID:                 50db9dcb4c7d4579bd8a6f908f327e28
  System UUID:                50db9dcb4c7d4579bd8a6f908f327e28
  Boot ID:                    405131cf-e18d-4128-b2d7-1a56378112e4
  Kernel Version:             6.12.5-linuxkit
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://27.4.1
  Kubelet Version:            v1.32.0
  Kube-Proxy Version:         v1.32.0
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (7 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-668d6bf9bc-fxlmp            100m (1%)     0 (0%)      70Mi (1%)        170Mi (4%)     1s
  kube-system                 etcd-minikube                       100m (1%)     0 (0%)      100Mi (2%)       0 (0%)         7s
  kube-system                 kube-apiserver-minikube             250m (3%)     0 (0%)      0 (0%)           0 (0%)         7s
  kube-system                 kube-controller-manager-minikube    200m (2%)     0 (0%)      0 (0%)           0 (0%)         7s
  kube-system                 kube-proxy-nmk6l                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s
  kube-system                 kube-scheduler-minikube             100m (1%)     0 (0%)      0 (0%)           0 (0%)         7s
  kube-system                 storage-provisioner                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         5s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%)   0 (0%)
  memory             170Mi (4%)  170Mi (4%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-1Gi      0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
  hugepages-32Mi     0 (0%)      0 (0%)
  hugepages-64Ki     0 (0%)      0 (0%)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 0s                 kube-proxy       
  Normal  NodeAllocatableEnforced  12s                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  11s (x8 over 12s)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    11s (x8 over 12s)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     11s (x7 over 12s)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  Starting                 7s                 kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  7s                 kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  7s                 kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    7s                 kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     7s                 kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           2s                 node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Feb23 22:10] netlink: 'init': attribute type 4 has an invalid length.
[  +0.065714] fakeowner: loading out-of-tree module taints kernel.


==> etcd [cf4e7202ce1c] <==
{"level":"warn","ts":"2025-02-23T22:16:29.878277Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-02-23T22:16:29.878512Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"warn","ts":"2025-02-23T22:16:29.878670Z","caller":"embed/config.go:689","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2025-02-23T22:16:29.878715Z","caller":"embed/etcd.go:128","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-02-23T22:16:29.878746Z","caller":"embed/etcd.go:497","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-02-23T22:16:29.882084Z","caller":"embed/etcd.go:136","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2025-02-23T22:16:29.882259Z","caller":"embed/etcd.go:311","msg":"starting an etcd server","etcd-version":"3.5.16","git-sha":"f20bbadd4","go-version":"go1.22.7","go-os":"linux","go-arch":"arm64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-02-23T22:16:29.885682Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"3.181834ms"}
{"level":"info","ts":"2025-02-23T22:16:29.890465Z","caller":"etcdserver/raft.go:505","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2025-02-23T22:16:29.890757Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2025-02-23T22:16:29.890881Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2025-02-23T22:16:29.890898Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-02-23T22:16:29.890910Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2025-02-23T22:16:29.890951Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2025-02-23T22:16:29.895232Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-02-23T22:16:29.898104Z","caller":"mvcc/kvstore.go:423","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-02-23T22:16:29.898746Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-02-23T22:16:29.899729Z","caller":"etcdserver/server.go:873","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.16","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-02-23T22:16:29.899934Z","caller":"etcdserver/server.go:757","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-02-23T22:16:29.900040Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-02-23T22:16:29.900106Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-02-23T22:16:29.900054Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-02-23T22:16:29.900111Z","caller":"fileutil/purge.go:50","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-02-23T22:16:29.900727Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2025-02-23T22:16:29.900793Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2025-02-23T22:16:29.901351Z","caller":"embed/etcd.go:729","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-02-23T22:16:29.901569Z","caller":"embed/etcd.go:280","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-02-23T22:16:29.901658Z","caller":"embed/etcd.go:600","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-02-23T22:16:29.901719Z","caller":"embed/etcd.go:572","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2025-02-23T22:16:29.901759Z","caller":"embed/etcd.go:871","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-02-23T22:16:30.592132Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2025-02-23T22:16:30.592177Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2025-02-23T22:16:30.592240Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2025-02-23T22:16:30.592264Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2025-02-23T22:16:30.592273Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-02-23T22:16:30.592281Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2025-02-23T22:16:30.592288Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2025-02-23T22:16:30.593184Z","caller":"etcdserver/server.go:2140","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2025-02-23T22:16:30.593454Z","caller":"etcdserver/server.go:2651","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-02-23T22:16:30.593702Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-02-23T22:16:30.593741Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-02-23T22:16:30.593979Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2025-02-23T22:16:30.594056Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-02-23T22:16:30.594084Z","caller":"etcdserver/server.go:2675","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2025-02-23T22:16:30.594256Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-02-23T22:16:30.594275Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-02-23T22:16:30.594522Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-02-23T22:16:30.595009Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2025-02-23T22:16:30.595417Z","caller":"v3rpc/health.go:61","msg":"grpc service status changed","service":"","status":"SERVING"}
{"level":"info","ts":"2025-02-23T22:16:30.596058Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}


==> kernel <==
 22:16:41 up 6 min,  0 users,  load average: 1.62, 0.84, 0.36
Linux minikube 6.12.5-linuxkit #1 SMP Tue Jan 21 10:23:32 UTC 2025 aarch64 aarch64 aarch64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [e52751374320] <==
I0223 22:16:31.690903       1 controller.go:119] Starting legacy_token_tracking_controller
I0223 22:16:31.690920       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0223 22:16:31.690957       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0223 22:16:31.690976       1 controller.go:78] Starting OpenAPI AggregationController
I0223 22:16:31.690999       1 crd_finalizer.go:269] Starting CRDFinalizer
I0223 22:16:31.691009       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0223 22:16:31.691037       1 naming_controller.go:294] Starting NamingConditionController
I0223 22:16:31.691047       1 controller.go:142] Starting OpenAPI controller
I0223 22:16:31.690964       1 controller.go:90] Starting OpenAPI V3 controller
I0223 22:16:31.691090       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0223 22:16:31.691117       1 local_available_controller.go:156] Starting LocalAvailability controller
I0223 22:16:31.691127       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0223 22:16:31.691145       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0223 22:16:31.694024       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0223 22:16:31.691056       1 establishing_controller.go:81] Starting EstablishingController
I0223 22:16:31.694312       1 apf_controller.go:377] Starting API Priority and Fairness config controller
I0223 22:16:31.694489       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0223 22:16:31.694498       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0223 22:16:31.694660       1 aggregator.go:169] waiting for initial CRD sync...
I0223 22:16:31.694764       1 cluster_authentication_trust_controller.go:462] Starting cluster_authentication_trust_controller controller
I0223 22:16:31.694794       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0223 22:16:31.695030       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0223 22:16:31.695143       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0223 22:16:31.695274       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0223 22:16:31.706914       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0223 22:16:31.707032       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0223 22:16:31.767740       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0223 22:16:31.767766       1 policy_source.go:240] refreshing policies
E0223 22:16:31.779102       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I0223 22:16:31.790779       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0223 22:16:31.790841       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0223 22:16:31.791565       1 controller.go:615] quota admission added evaluator for: namespaces
I0223 22:16:31.791628       1 cache.go:39] Caches are synced for LocalAvailability controller
I0223 22:16:31.792718       1 shared_informer.go:320] Caches are synced for configmaps
I0223 22:16:31.794876       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0223 22:16:31.794888       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0223 22:16:31.794891       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0223 22:16:31.794879       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0223 22:16:31.802158       1 shared_informer.go:320] Caches are synced for node_authorizer
I0223 22:16:31.807721       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0223 22:16:31.807808       1 aggregator.go:171] initial CRD sync complete...
I0223 22:16:31.807862       1 autoregister_controller.go:144] Starting autoregister controller
I0223 22:16:31.807967       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0223 22:16:31.807980       1 cache.go:39] Caches are synced for autoregister controller
I0223 22:16:31.980912       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0223 22:16:32.698803       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0223 22:16:32.702522       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0223 22:16:32.702546       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0223 22:16:32.913562       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0223 22:16:32.929564       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0223 22:16:32.999725       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0223 22:16:33.002778       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0223 22:16:33.003410       1 controller.go:615] quota admission added evaluator for: endpoints
I0223 22:16:33.005421       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0223 22:16:33.724414       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0223 22:16:33.952311       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0223 22:16:33.957347       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0223 22:16:33.965931       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0223 22:16:38.933891       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0223 22:16:39.226762       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps


==> kube-controller-manager [fa756b1604e5] <==
I0223 22:16:38.206811       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0223 22:16:38.226378       1 shared_informer.go:320] Caches are synced for disruption
I0223 22:16:38.267775       1 shared_informer.go:320] Caches are synced for endpoint
I0223 22:16:38.267826       1 shared_informer.go:320] Caches are synced for ReplicationController
I0223 22:16:38.267839       1 shared_informer.go:320] Caches are synced for job
I0223 22:16:38.267858       1 shared_informer.go:320] Caches are synced for endpoint_slice
I0223 22:16:38.267878       1 shared_informer.go:320] Caches are synced for crt configmap
I0223 22:16:38.272720       1 shared_informer.go:320] Caches are synced for daemon sets
I0223 22:16:38.273477       1 shared_informer.go:320] Caches are synced for HPA
I0223 22:16:38.274391       1 shared_informer.go:320] Caches are synced for deployment
I0223 22:16:38.267893       1 shared_informer.go:320] Caches are synced for taint-eviction-controller
I0223 22:16:38.267935       1 shared_informer.go:320] Caches are synced for resource quota
I0223 22:16:38.267959       1 shared_informer.go:320] Caches are synced for taint
I0223 22:16:38.267946       1 shared_informer.go:320] Caches are synced for node
I0223 22:16:38.267946       1 shared_informer.go:320] Caches are synced for bootstrap_signer
I0223 22:16:38.267972       1 shared_informer.go:320] Caches are synced for certificate-csrapproving
I0223 22:16:38.267977       1 shared_informer.go:320] Caches are synced for persistent volume
I0223 22:16:38.267983       1 shared_informer.go:320] Caches are synced for cronjob
I0223 22:16:38.267990       1 shared_informer.go:320] Caches are synced for service account
I0223 22:16:38.267994       1 shared_informer.go:320] Caches are synced for stateful set
I0223 22:16:38.268008       1 shared_informer.go:320] Caches are synced for endpoint_slice_mirroring
I0223 22:16:38.268138       1 shared_informer.go:320] Caches are synced for attach detach
I0223 22:16:38.278099       1 node_lifecycle_controller.go:1234] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0223 22:16:38.278767       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0223 22:16:38.279106       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0223 22:16:38.274876       1 shared_informer.go:320] Caches are synced for expand
I0223 22:16:38.274933       1 shared_informer.go:320] Caches are synced for PVC protection
I0223 22:16:38.277110       1 shared_informer.go:320] Caches are synced for validatingadmissionpolicy-status
I0223 22:16:38.278330       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-legacy-unknown
I0223 22:16:38.279131       1 shared_informer.go:313] Waiting for caches to sync for cidrallocator
I0223 22:16:38.281661       1 shared_informer.go:320] Caches are synced for cidrallocator
I0223 22:16:38.281766       1 shared_informer.go:320] Caches are synced for GC
I0223 22:16:38.281934       1 node_lifecycle_controller.go:886] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0223 22:16:38.282031       1 node_lifecycle_controller.go:1080] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0223 22:16:38.284911       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-client
I0223 22:16:38.285355       1 shared_informer.go:320] Caches are synced for legacy-service-account-token-cleaner
I0223 22:16:38.285356       1 shared_informer.go:320] Caches are synced for PV protection
I0223 22:16:38.286401       1 shared_informer.go:320] Caches are synced for resource quota
I0223 22:16:38.286543       1 shared_informer.go:320] Caches are synced for TTL after finished
I0223 22:16:38.286645       1 shared_informer.go:320] Caches are synced for namespace
I0223 22:16:38.286687       1 shared_informer.go:320] Caches are synced for ReplicaSet
I0223 22:16:38.286773       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-serving
I0223 22:16:38.286814       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0223 22:16:38.286847       1 shared_informer.go:320] Caches are synced for ephemeral
I0223 22:16:38.287934       1 shared_informer.go:320] Caches are synced for TTL
I0223 22:16:38.298906       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0223 22:16:38.298946       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0223 22:16:38.298989       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0223 22:16:38.303888       1 shared_informer.go:320] Caches are synced for garbage collector
I0223 22:16:38.349374       1 shared_informer.go:320] Caches are synced for ClusterRoleAggregator
I0223 22:16:38.379039       1 shared_informer.go:320] Caches are synced for garbage collector
I0223 22:16:38.379082       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0223 22:16:38.379097       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I0223 22:16:38.479568       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0223 22:16:39.181883       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0223 22:16:39.380689       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="442.888875ms"
I0223 22:16:39.385058       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="4.26525ms"
I0223 22:16:39.385136       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="37.667µs"
I0223 22:16:39.388746       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="31.292µs"
I0223 22:16:41.071078       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="3.918125ms"


==> kube-proxy [548840a2ad68] <==
I0223 22:16:39.925247       1 server_linux.go:66] "Using iptables proxy"
I0223 22:16:40.084870       1 server.go:698] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0223 22:16:40.084976       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0223 22:16:40.102079       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0223 22:16:40.102175       1 server_linux.go:170] "Using iptables Proxier"
I0223 22:16:40.104760       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0223 22:16:40.105260       1 server.go:497] "Version info" version="v1.32.0"
I0223 22:16:40.105285       1 server.go:499] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0223 22:16:40.106768       1 config.go:199] "Starting service config controller"
I0223 22:16:40.106857       1 shared_informer.go:313] Waiting for caches to sync for service config
I0223 22:16:40.106915       1 config.go:105] "Starting endpoint slice config controller"
I0223 22:16:40.106934       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0223 22:16:40.107560       1 config.go:329] "Starting node config controller"
I0223 22:16:40.108147       1 shared_informer.go:313] Waiting for caches to sync for node config
I0223 22:16:40.207844       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0223 22:16:40.207920       1 shared_informer.go:320] Caches are synced for service config
I0223 22:16:40.209210       1 shared_informer.go:320] Caches are synced for node config


==> kube-scheduler [556d0e765c54] <==
I0223 22:16:30.379776       1 serving.go:386] Generated self-signed cert in-memory
W0223 22:16:31.712711       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0223 22:16:31.712744       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0223 22:16:31.712751       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0223 22:16:31.712756       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0223 22:16:31.782773       1 server.go:166] "Starting Kubernetes Scheduler" version="v1.32.0"
I0223 22:16:31.782797       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0223 22:16:31.784549       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0223 22:16:31.784654       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0223 22:16:31.784684       1 shared_informer.go:313] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0223 22:16:31.785082       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
W0223 22:16:31.785807       1 reflector.go:569] runtime/asm_arm64.s:1223: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0223 22:16:31.785852       1 reflector.go:166] "Unhandled Error" err="runtime/asm_arm64.s:1223: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W0223 22:16:31.785947       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0223 22:16:31.786093       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786026       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0223 22:16:31.786133       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786139       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0223 22:16:31.786156       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786171       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0223 22:16:31.786181       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786212       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0223 22:16:31.786227       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786263       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:31.786271       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786327       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:31.786340       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786345       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0223 22:16:31.786353       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786361       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "volumeattachments" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:31.786376       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.VolumeAttachment: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786390       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0223 22:16:31.786397       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786404       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0223 22:16:31.786415       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786419       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:31.786425       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786437       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0223 22:16:31.786443       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786462       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0223 22:16:31.786475       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:31.786509       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:31.786523       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:32.610024       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0223 22:16:32.610118       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:32.677988       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0223 22:16:32.678066       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:32.751770       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "volumeattachments" in API group "storage.k8s.io" at the cluster scope
E0223 22:16:32.751806       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.VolumeAttachment: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0223 22:16:32.773266       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0223 22:16:32.773295       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0223 22:16:32.843369       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0223 22:16:32.843406       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
I0223 22:16:33.285886       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.783142    2356 kubelet.go:2388] "Starting kubelet main sync loop"
Feb 23 22:16:33 minikube kubelet[2356]: E0223 22:16:33.783180    2356 kubelet.go:2412] "Skipping pod synchronization" err="[container runtime status check may not have completed yet, PLEG is not healthy: pleg has yet to be successful]"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793774    2356 cpu_manager.go:221] "Starting CPU manager" policy="none"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793798    2356 cpu_manager.go:222] "Reconciling" reconcilePeriod="10s"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793816    2356 state_mem.go:36] "Initialized new in-memory state store"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793944    2356 state_mem.go:88] "Updated default CPUSet" cpuSet=""
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793958    2356 state_mem.go:96] "Updated CPUSet assignments" assignments={}
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.793986    2356 policy_none.go:49] "None policy: Start"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794008    2356 memory_manager.go:186] "Starting memorymanager" policy="None"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794033    2356 state_mem.go:35] "Initializing new in-memory state store"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794130    2356 state_mem.go:75] "Updated machine memory state"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794788    2356 manager.go:519] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794909    2356 eviction_manager.go:189] "Eviction manager: starting control loop"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.794936    2356 container_log_manager.go:189] "Initializing container log rotate workers" workers=1 monitorPeriod="10s"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.796571    2356 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
Feb 23 22:16:33 minikube kubelet[2356]: E0223 22:16:33.796806    2356 eviction_manager.go:267] "eviction manager: failed to check if we have separate container filesystem. Ignoring." err="no imagefs label for configured runtime"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.884325    2356 kubelet.go:3200] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.885307    2356 kubelet.go:3200] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.885644    2356 kubelet.go:3200] "Creating a mirror pod for static pod" pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.886805    2356 kubelet.go:3200] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.897507    2356 kubelet_node_status.go:76] "Attempting to register node" node="minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.902443    2356 kubelet_node_status.go:125] "Node was previously registered" node="minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.902525    2356 kubelet_node_status.go:79] "Successfully registered node" node="minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963806    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/d72d0a4cf4be077c9919d46b7358a5e8-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"d72d0a4cf4be077c9919d46b7358a5e8\") " pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963850    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/d14ce008bee3a1f3bd7cf547688f9dfe-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"d14ce008bee3a1f3bd7cf547688f9dfe\") " pod="kube-system/kube-scheduler-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963867    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/2b4b75c2a289008e0b381891e9683040-etcd-certs\") pod \"etcd-minikube\" (UID: \"2b4b75c2a289008e0b381891e9683040\") " pod="kube-system/etcd-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963879    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963900    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963919    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963938    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/d72d0a4cf4be077c9919d46b7358a5e8-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"d72d0a4cf4be077c9919d46b7358a5e8\") " pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963958    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/d72d0a4cf4be077c9919d46b7358a5e8-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"d72d0a4cf4be077c9919d46b7358a5e8\") " pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963969    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.963996    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.964040    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/d72d0a4cf4be077c9919d46b7358a5e8-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"d72d0a4cf4be077c9919d46b7358a5e8\") " pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.964063    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/d72d0a4cf4be077c9919d46b7358a5e8-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"d72d0a4cf4be077c9919d46b7358a5e8\") " pod="kube-system/kube-apiserver-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.964079    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.964100    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/843c74f7b3bc7d7040a05c31708a6a30-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"843c74f7b3bc7d7040a05c31708a6a30\") " pod="kube-system/kube-controller-manager-minikube"
Feb 23 22:16:33 minikube kubelet[2356]: I0223 22:16:33.964114    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/2b4b75c2a289008e0b381891e9683040-etcd-data\") pod \"etcd-minikube\" (UID: \"2b4b75c2a289008e0b381891e9683040\") " pod="kube-system/etcd-minikube"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.747809    2356 apiserver.go:52] "Watching apiserver"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.754828    2356 desired_state_of_world_populator.go:157] "Finished populating initial desired state of world"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.894538    2356 kubelet.go:3200] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Feb 23 22:16:34 minikube kubelet[2356]: E0223 22:16:34.903885    2356 kubelet.go:3202] "Failed creating a mirror pod" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.978493    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.978465678 podStartE2EDuration="1.978465678s" podCreationTimestamp="2025-02-23 22:16:33 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:34.969194844 +0000 UTC m=+1.282731960" watchObservedRunningTime="2025-02-23 22:16:34.978465678 +0000 UTC m=+1.292002751"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.985112    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=1.985094969 podStartE2EDuration="1.985094969s" podCreationTimestamp="2025-02-23 22:16:33 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:34.978689303 +0000 UTC m=+1.292226418" watchObservedRunningTime="2025-02-23 22:16:34.985094969 +0000 UTC m=+1.298632043"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.993543    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=1.993527303 podStartE2EDuration="1.993527303s" podCreationTimestamp="2025-02-23 22:16:33 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:34.991408386 +0000 UTC m=+1.304945460" watchObservedRunningTime="2025-02-23 22:16:34.993527303 +0000 UTC m=+1.307064376"
Feb 23 22:16:34 minikube kubelet[2356]: I0223 22:16:34.994035    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=1.994030386 podStartE2EDuration="1.994030386s" podCreationTimestamp="2025-02-23 22:16:33 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:34.985274969 +0000 UTC m=+1.298812043" watchObservedRunningTime="2025-02-23 22:16:34.994030386 +0000 UTC m=+1.307567460"
Feb 23 22:16:38 minikube kubelet[2356]: I0223 22:16:38.508496    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-d6t8t\" (UniqueName: \"kubernetes.io/projected/990841dc-e68a-485d-9d02-b8b1d41656cb-kube-api-access-d6t8t\") pod \"storage-provisioner\" (UID: \"990841dc-e68a-485d-9d02-b8b1d41656cb\") " pod="kube-system/storage-provisioner"
Feb 23 22:16:38 minikube kubelet[2356]: I0223 22:16:38.509919    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/990841dc-e68a-485d-9d02-b8b1d41656cb-tmp\") pod \"storage-provisioner\" (UID: \"990841dc-e68a-485d-9d02-b8b1d41656cb\") " pod="kube-system/storage-provisioner"
Feb 23 22:16:38 minikube kubelet[2356]: E0223 22:16:38.620065    2356 projected.go:288] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Feb 23 22:16:38 minikube kubelet[2356]: E0223 22:16:38.620389    2356 projected.go:194] Error preparing data for projected volume kube-api-access-d6t8t for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
Feb 23 22:16:38 minikube kubelet[2356]: E0223 22:16:38.621567    2356 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/990841dc-e68a-485d-9d02-b8b1d41656cb-kube-api-access-d6t8t podName:990841dc-e68a-485d-9d02-b8b1d41656cb nodeName:}" failed. No retries permitted until 2025-02-23 22:16:39.121374096 +0000 UTC m=+5.434911295 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-d6t8t" (UniqueName: "kubernetes.io/projected/990841dc-e68a-485d-9d02-b8b1d41656cb-kube-api-access-d6t8t") pod "storage-provisioner" (UID: "990841dc-e68a-485d-9d02-b8b1d41656cb") : configmap "kube-root-ca.crt" not found
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.319098    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/7c65dcdb-cd64-4c36-adc8-a9e19c2f8697-kube-proxy\") pod \"kube-proxy-nmk6l\" (UID: \"7c65dcdb-cd64-4c36-adc8-a9e19c2f8697\") " pod="kube-system/kube-proxy-nmk6l"
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.319166    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-5lp4n\" (UniqueName: \"kubernetes.io/projected/7c65dcdb-cd64-4c36-adc8-a9e19c2f8697-kube-api-access-5lp4n\") pod \"kube-proxy-nmk6l\" (UID: \"7c65dcdb-cd64-4c36-adc8-a9e19c2f8697\") " pod="kube-system/kube-proxy-nmk6l"
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.319202    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/7c65dcdb-cd64-4c36-adc8-a9e19c2f8697-xtables-lock\") pod \"kube-proxy-nmk6l\" (UID: \"7c65dcdb-cd64-4c36-adc8-a9e19c2f8697\") " pod="kube-system/kube-proxy-nmk6l"
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.319233    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/7c65dcdb-cd64-4c36-adc8-a9e19c2f8697-lib-modules\") pod \"kube-proxy-nmk6l\" (UID: \"7c65dcdb-cd64-4c36-adc8-a9e19c2f8697\") " pod="kube-system/kube-proxy-nmk6l"
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.419996    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/ef18d036-a102-4094-af2d-b7e7323f1d76-config-volume\") pod \"coredns-668d6bf9bc-fxlmp\" (UID: \"ef18d036-a102-4094-af2d-b7e7323f1d76\") " pod="kube-system/coredns-668d6bf9bc-fxlmp"
Feb 23 22:16:39 minikube kubelet[2356]: I0223 22:16:39.420047    2356 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-wn8dt\" (UniqueName: \"kubernetes.io/projected/ef18d036-a102-4094-af2d-b7e7323f1d76-kube-api-access-wn8dt\") pod \"coredns-668d6bf9bc-fxlmp\" (UID: \"ef18d036-a102-4094-af2d-b7e7323f1d76\") " pod="kube-system/coredns-668d6bf9bc-fxlmp"
Feb 23 22:16:40 minikube kubelet[2356]: I0223 22:16:40.010651    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-nmk6l" podStartSLOduration=1.01053168 podStartE2EDuration="1.01053168s" podCreationTimestamp="2025-02-23 22:16:39 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:39.991945347 +0000 UTC m=+6.305482504" watchObservedRunningTime="2025-02-23 22:16:40.01053168 +0000 UTC m=+6.324068837"
Feb 23 22:16:40 minikube kubelet[2356]: I0223 22:16:40.064752    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=5.064721847 podStartE2EDuration="5.064721847s" podCreationTimestamp="2025-02-23 22:16:35 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:40.063513722 +0000 UTC m=+6.377050837" watchObservedRunningTime="2025-02-23 22:16:40.064721847 +0000 UTC m=+6.378258962"
Feb 23 22:16:41 minikube kubelet[2356]: I0223 22:16:41.062704    2356 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-668d6bf9bc-fxlmp" podStartSLOduration=2.062375291 podStartE2EDuration="2.062375291s" podCreationTimestamp="2025-02-23 22:16:39 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-02-23 22:16:41.056850833 +0000 UTC m=+7.372219753" watchObservedRunningTime="2025-02-23 22:16:41.062375291 +0000 UTC m=+7.377744295"


==> storage-provisioner [bcf0f809c183] <==
I0223 22:16:39.686850       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...

