# .github/workflows/ci.yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Backend Setup
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install backend dependencies
      run: |
        cd app
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Integration Tests
      run: |
        cd tests
        python -m pip install --upgrade pip
        pip install requests
        python test_integration.py

    # Docker Build and Push to Docker Hub
    - name: Build Docker image
      run: |
        docker build --platform linux/amd64 -t zkortam/sentiment-analysis:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker push zkortam/sentiment-analysis:latest

    # Deploy Backend to AWS ECR (Optional)
    - name: Log in to AWS ECR
      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPO }}

    - name: Tag and Push Docker Image to AWS ECR
      run: |
        docker tag zkortam/sentiment-analysis:latest ${{ secrets.AWS_ECR_REPO }}/sentiment-analysis:latest
        docker push ${{ secrets.AWS_ECR_REPO }}/sentiment-analysis:latest

    # Deploy to Kubernetes Cluster (EKS)
    - name: Configure AWS CLI and Update Kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-2 --name sentiment-cluster

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

  frontend:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Inject API URL for Frontend
      run: echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > frontend/.env

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm install

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - name: Deploy Frontend to GitHub Pages
      run: |
        cd frontend
        npm run deploy
